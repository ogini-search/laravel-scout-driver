name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, sqlite3, pdo_sqlite, bcmath
          coverage: none

      - name: Validate composer.json
        run: composer validate --strict

      - name: Install dependencies
        run: composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

      - name: Run tests
        run: |
          composer install --dev
          vendor/bin/phpunit

      - name: Generate changelog
        id: changelog
        run: |
          # Get the tag name
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

          # Generate changelog from git commits
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 $TAG_NAME^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges $PREVIOUS_TAG..$TAG_NAME)
          fi

          # Save changelog to file
          echo "## Changes in $TAG_NAME" > RELEASE_CHANGELOG.md
          echo "" >> RELEASE_CHANGELOG.md
          echo "$CHANGELOG" >> RELEASE_CHANGELOG.md

          # Output for GitHub release
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat RELEASE_CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag_name }}
          release_name: Release ${{ steps.changelog.outputs.tag_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ contains(steps.changelog.outputs.tag_name, '-') }}

      - name: Prepare package for Packagist
        run: |
          # Ensure all necessary files are included
          echo "Validating package structure..."
          test -f composer.json
          test -f README.md
          test -f LICENSE.md
          test -d src/
          echo "Package structure is valid."

      - name: Notify Packagist
        run: |
          echo "Package will be automatically updated on Packagist when tagged."
          echo "Ensure the package is registered at: https://packagist.org/"
